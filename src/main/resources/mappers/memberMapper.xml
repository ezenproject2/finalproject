<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ezen.books.repository.MemberMapper">

    <select id="checkLoginIdDuplicate" resultType="boolean">
        select count(1) > 0 from member
        where login_id = #{loginId}
    </select>

    <insert id="insert" parameterType="com.ezen.books.domain.MemberVO">
        insert into member (login_id, password, email, name, phone_number, nick_name, auth ,gno)
        values (#{loginId}, #{password}, #{email}, #{name}, #{phoneNumber}, #{nickName}, 'ROLE_USER', '1')
    </insert>

    <select id="findByLoginId" resultType="com.ezen.books.domain.MemberVO">
        select * from member
        where login_id = #{loginId}
    </select>

    <select id="checkUser" resultType="com.ezen.books.domain.MemberVO">
        select count(*) from member
        where login_id = #{loginId} and password = #{password}
    </select>

    <insert id="saveTokens" parameterType="com.ezen.books.domain.MemberVO">
        insert into member (login_id, password, email, name, phone_number, nick_name, auth, gno, provider, provider_id)
        values (#{loginId}, #{password}, #{email}, #{name}, #{phoneNumber}, #{nickName}, 'ROLE_USER' , '1' ,#{provider}, #{providerId})
    </insert>

    <update id="updateMember">
        update member
        <set>
            <if test="password != null">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phoneNumber != null">phone_number = #{phoneNumber},</if>
            <if test="nickName != null">nick_name = #{nickName},</if>
        </set>
        where login_id = #{loginId}
    </update>

    <update id="deleteMember">
        update member
        set is_del = 'Y',
        delete_date = now()
        where login_id = #{loginId}
    </update>

    <!--3개월 이내 총 구매 금액을 조회-->
    <select id="getTotalSpentInLast3Months" resultType="double">
        select sum(book_price) from purchase
        where mno = #{mno} and purchase_date > now() - interval 3 month
    </select>

    <!--회원 등급 갱신-->
    <update id="updateMemberGrade">
        update member
        set gno = #{gradeNo}, grade_log = now()
        where mno = #{mno}
    </update>

    <select id="getMemberByInfo" resultType="com.ezen.books.domain.MemberVO">
        select * from member
        where mno = #{mno}
    </select>

</mapper>