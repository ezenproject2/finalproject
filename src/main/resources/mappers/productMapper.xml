<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.books.repository.ProductMapper">

    <!-- 테스트 데이터 입력 (book) -->
    <insert id="registerTestData">
        INSERT INTO product ( isbn, title, author, discount, publisher,
        pubdate, description, stock, primary_ctg, secondary_ctg, link, image, discount_rate)
        VALUES ( #{isbn}, #{title}, #{author}, #{discount}, #{publisher},
        #{pubdate}, #{description}, #{stock}, #{primaryCtg}, #{secondaryCtg}, #{link}, #{image}, ${discountRate})
    </insert>

    <!-- isbn 제공하고 이미 있는지 확인 (book) -->
    <select id="isValid" resultType="int">
        select count(isbn) from product where isbn = ${isbn};
    </select>

    <insert id="register">
        INSERT INTO product ( isbn, title, author, discount, publisher,
        pubdate, description, stock, discount_rate,
        primary_ctg, secondary_ctg, link, image)
        VALUES ( #{isbn}, #{title}, #{author}, #{discount},
        #{publisher}, #{pubdate}, #{description}, #{stock},
        #{discountRate}, #{primaryCtg}, #{secondaryCtg}, #{link}, #{image})
    </insert>

    <select id="getList" resultType="com.ezen.books.domain.ProductVO">
        select * from product
        <!-- 동적 WHERE 절 -->
        <where>
            <!-- 항상 존재하는 조건: 삭제된 항목 제외 -->
            is_del = 'N'

            <!-- 검색 타입(type)과 키워드(keyword)에 대한 조건 -->
            <if test="type != null and keyword != null">
                <trim prefix="and (" suffix=")" suffixOverrides="or">
                    <foreach collection="typeToArray" item="splitType">
                        <trim suffix="or">
                            <choose>
                                <when test="splitType == 't'.toString()">
                                    title like concat('%', #{keyword}, '%')
                                </when>
                                <when test="splitType == 'a'.toString()">
                                    author like concat('%', #{keyword}, '%')
                                </when>
                                <when test="splitType == 'p'.toString()">
                                    publisher like concat('%', #{keyword}, '%')
                                </when>
                            </choose>
                        </trim>
                    </foreach>
                </trim>
            </if>

            <!-- primaryCtg 필터 -->
            <if test="primaryCtg != null and primaryCtg != ''">
                and primary_ctg = #{primaryCtg}
            </if>

            <!-- secondaryCtg 필터 -->
            <if test="secondaryCtg != null and secondaryCtg != ''">
                and secondary_ctg = #{secondaryCtg}
            </if>
        </where>

        <!-- 동적 ORDER BY 절 -->
        <choose>
            <when test="order == 'new'">
                order by prno desc
            </when>
            <when test="order == 'topRating'">
                order by review_avg desc
            </when>
            <when test="order == 'topPrice'">
                order by discount desc
            </when>
            <when test="order == 'lowPrice'">
                order by discount asc
            </when>
            <otherwise>
                order by prno desc
            </otherwise>
        </choose>

        <!-- 페이징 처리 -->
        limit #{startIndex}, #{qty};
    </select>


    <!-- 페이징 조건을 위한 단락 -->
    <select id="getTotalCount" resultType="int">
        select count(isbn) from product
        <!-- 동적 WHERE 절 -->
        <where>
            <!-- 항상 존재하는 조건: 삭제된 항목 제외 -->
            is_del = 'N'

            <!-- 검색 타입(type)과 키워드(keyword)에 대한 조건 -->
            <if test="type != null and keyword != null and type != ''">
                <trim prefix="and (" suffix=")" suffixOverrides="or">
                    <foreach collection="typeToArray" item="splitType">
                        <trim suffix="or">
                            <choose>
                                <when test="splitType == 't'.toString()">
                                    title like concat('%', #{keyword}, '%')
                                </when>
                                <when test="splitType == 'a'.toString()">
                                    author like concat('%', #{keyword}, '%')
                                </when>
                                <when test="splitType == 'p'.toString()">
                                    publisher like concat('%', #{keyword}, '%')
                                </when>
                            </choose>
                        </trim>
                    </foreach>
                </trim>
            </if>

            <!-- primaryCtg 필터 -->
            <if test="primaryCtg != null and primaryCtg != ''">
                and primary_ctg = #{primaryCtg}
            </if>

            <!-- secondaryCtg 필터 -->
            <if test="secondaryCtg != null and secondaryCtg != ''">
                and secondary_ctg = #{secondaryCtg}
            </if>
        </where>
    </select>

    <select id="getDetail" resultType="com.ezen.books.domain.ProductVO">
        select * from product where isbn = #{isbn}
    </select>

    <update id="updateReviewAvg">
        update product p join ( select prno, round(avg(rating), 1) as avg_rating
        from review where prno = #{prno} group by prno ) r on p.prno = r.prno
        set p.review_avg = r.avg_rating;
    </update>

</mapper>
